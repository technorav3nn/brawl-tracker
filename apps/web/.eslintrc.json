{
	"extends": [
		"neon/common",
		"neon/node",
		"neon/typescript",
		"neon/prettier",
		"neon/vue",
		"neon/vue-typescript"
	],
	"parserOptions": {
		"parser": "@typescript-eslint/parser"
	},
	"rules": {
		"@typescript-eslint/no-return-await": "off",
		"@typescript-eslint/return-await": "off",
		"no-restricted-globals": "off",
		"n/prefer-global/process": "off",
		"vue/sort-keys": "off",
		"vue/html-comment-indent": "off",
		"vue/no-v-model-argument": "off",
		"vue/max-attributes-per-line": "off",
		"vue/no-unused-properties": "off",
		"vue/require-default-prop": "off",
		"vue/no-empty-component-block": "off", // typescript in template
		"vue/no-multiple-template-root": "off",
		"vue/first-attribute-linebreak": "off",
		"vue/require-emit-validator": "off",
		"vue/attribute-hyphenation": "off",
		"vue/html-self-closing": "off",
		"vue/comma-dangle": "off",
		"vue/operator-linebreak": "off",
		"vue/html-indent": "off",
		"vue/html-closing-bracket-newline": "off",
		"vue/multi-word-component-names": "off",
		"vue/one-component-per-file": "off",
		"import/no-extraneous-dependencies": "off",
		"no-undef": "off",
		"no-extra-parens": "off",
		// force import type
		"@typescript-eslint/consistent-type-imports": [
			"error",
			{
				"fixStyle": "inline-type-imports"
			}
		],
		"import/no-duplicates": ["error", { "prefer-inline": true }],
		"comma-dangle": "off",
		"object-curly-newline": "off"
	},
	"overrides": [
		{
			// Include typescript eslint rules in *.vue files
			// https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/src/configs/eslint-recommended.ts
			"files": ["*.vue"],
			"rules": {
				"constructor-super": "off", // ts(2335) & ts(2377)
				"no-undef": "off", // ts(2304)
				"no-var": "error", // ts transpiles let/const to var, so no need for vars any more
				"prefer-const": "error", // ts provides better types with const
				"prefer-rest-params": "error", // ts provides better types with rest args over arguments
				"prefer-spread": "error" // ts transpiles spread to apply, so no need for manual apply
			}
		},
		{
			"files": [
				// These pages are not used directly by users so they can have one-word names.
				"**/pages/**/*.{js,ts,jsx,tsx,vue}",
				"**/layouts/**/*.{js,ts,jsx,tsx,vue}",
				"**/app.{js,ts,jsx,tsx,vue}",
				"**/error.{js,ts,jsx,tsx,vue}",
				// These files should have multiple words in their names as they are within subdirectories.
				"**/components/*/**/*.{js,ts,jsx,tsx,vue}"
			],
			"rules": { "vue/multi-word-component-names": "off" }
		},
		{
			// Pages and layouts are required to have a single root element if transitions are enabled.
			"files": ["**/pages/**/*.{js,ts,jsx,tsx,vue}", "**/layouts/**/*.{js,ts,jsx,tsx,vue}"],
			"rules": { "vue/no-multiple-template-root": "error" }
		}
	]
}
